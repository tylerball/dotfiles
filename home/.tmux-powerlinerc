# Default configuration file for tmux-powerline.
# vi: filetype=sh

# General {
  # Show which segment fails and its exit code.
  export TMUX_POWERLINE_DEBUG_MODE_ENABLED="false"
  export TMUX_POWERLINE_PATCHED_FONT_IN_USE="true"
  export TMUX_POWERLINE_THEME="powerline"
  # Overlay directory to look for segments. There you can put your own segments outside the repo. Fallback will still be the "segments" directory in the repo.
  export TMUX_POWERLINE_DIR_USER_SEGMENTS=""
  export TMUX_POWERLINE_DIR_USER_THEMES="~/.tmux"
# }

# date.sh {
  # date(1) format for the date. If you don't, for some reason, like ISO 8601 format you might want to have "%D" or "%m/%d/%Y".
  export TMUX_POWERLINE_SEG_DATE_FORMAT="%F"
# }

# now_playing.sh {
  # Music player to use. Can be any of {audacious, banshee, cmus, itunes, lastfm, mocp, mpd, mpd_simple, pithos, rdio, rhythmbox, spotify, spotify_wine, file}.
  export TMUX_POWERLINE_SEG_NOW_PLAYING_MUSIC_PLAYER="mpd"
  # File to be read in case the song is being read from a file
  export TMUX_POWERLINE_SEG_NOW_PLAYING_FILE_NAME=""
  # Maximum output length.
  export TMUX_POWERLINE_SEG_NOW_PLAYING_MAX_LEN="40"
  # How to handle too long strings. Can be {trim, roll}
  export TMUX_POWERLINE_SEG_NOW_PLAYING_TRIM_METHOD="trim"
  # Charcters per second to roll if rolling trim method is used.
  export TMUX_POWERLINE_SEG_NOW_PLAYING_ROLL_SPEED="2"

  # Hostname for MPD server in the format "[password@]host"
  export TMUX_POWERLINE_SEG_NOW_PLAYING_MPD_HOST="localhost"
  # Port the MPD server is running on.
  export TMUX_POWERLINE_SEG_NOW_PLAYING_MPD_PORT="6600"
  # Song display format for mpd_simple. See mpc(1) for delimiters.
  export TMUX_POWERLINE_SEG_NOW_PLAYING_MPD_SIMPLE_FORMAT="%artist% - %title%"

  # Username for Last.fm if that music player is used.
  export TMUX_POWERLINE_SEG_NOW_PLAYING_LASTFM_USERNAME=""
  # How often in seconds to update the data from last.fm.
  export TMUX_POWERLINE_SEG_NOW_PLAYING_LASTFM_UPDATE_PERIOD="30"
  # Fancy char to display before now playing track
  export TMUX_POWERLINE_SEG_NOW_PLAYING_NOTE_CHAR="â™«"
# }

# weather.sh {
  # The data provider to use. Currently only "yahoo" is supported.
  export TMUX_POWERLINE_SEG_WEATHER_DATA_PROVIDER="yahoo"
  # What unit to use. Can be any of {c,f,k}.
  export TMUX_POWERLINE_SEG_WEATHER_UNIT="c"
  # How often to update the weather in seconds.
  export TMUX_POWERLINE_SEG_WEATHER_UPDATE_PERIOD="600"
  # Name of GNU grep binary if in PATH, or path to it.
  export TMUX_POWERLINE_SEG_WEATHER_GREP="/usr/bin/grep"

  # Your location. Find a code that works for you:
  # 1. Go to Yahoo weather http://weather.yahoo.com/
  # 2. Find the weather for you location
  # 3. Copy the last numbers in that URL. e.g. "http://weather.yahoo.com/united-states/california/newport-beach-12796587/" has the numbers "12796587"
  export TMUX_POWERLINE_SEG_WEATHER_LOCATION="4118"
# }
